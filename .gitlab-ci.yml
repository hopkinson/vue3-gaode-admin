variables:
  BUILD_IMAGE: $REGISTRY_HOST/debian/node-dev-docker:10.16.3
  WORKSPACES: /builds/$CI_PROJECT_PATH
  DOCKER_IMAGE_REGISTRY: $REGISTRY_HOST/tubsoft
  DOCKER_CONTAINER_NAME: hgbd-car-web
  DOCKER_COMPOSE_NAME: web
  RELEASE_COMPOSE_DIR: ~/boot/hgbd-car
  DEVELOP_COMPOSE_DIR: ~/boot/samples/hgbd-car

stages:
  - build
  - release
  - deploy

build:
  image: $BUILD_IMAGE
  stage: build
  before_script:
    - 'which yarn || ( npm install yarn -g)'
    - docker login -u $REGISTRY_USER -p $REGISTRY_PWD $REGISTRY_HOST
  script:
    - yarn install && npm run build
    - cd docker
    - docker build --rm --build-arg build_data="$(date +%y%m%d.%H%M)" --build-arg ver="${CI_COMMIT_TAG}" -t="${DOCKER_IMAGE_REGISTRY}/${DOCKER_CONTAINER_NAME}:test" .
    - docker push ${DOCKER_IMAGE_REGISTRY}/${DOCKER_CONTAINER_NAME}:test
    - docker rmi ${DOCKER_IMAGE_REGISTRY}/${DOCKER_CONTAINER_NAME}:test
  only:
    - master

release:
  image: $BUILD_IMAGE
  stage: release
  before_script:
    - 'which yarn || ( npm install yarn -g)'
    - docker login -u $REGISTRY_USER -p $REGISTRY_PWD $REGISTRY_HOST
  script:
    - yarn install && npm run build
    - cd docker
    - docker build --rm --build-arg build_data="$(date +%y%m%d.%H%M)" --build-arg ver="${CI_COMMIT_TAG}" -t="${DOCKER_IMAGE_REGISTRY}/${DOCKER_CONTAINER_NAME}:$CI_COMMIT_TAG" .
    - docker push ${DOCKER_IMAGE_REGISTRY}/${DOCKER_CONTAINER_NAME}:$CI_COMMIT_TAG
    - docker rmi ${DOCKER_IMAGE_REGISTRY}/${DOCKER_CONTAINER_NAME}:$CI_COMMIT_TAG
  only:
    - tags

deploy:
  image: $BUILD_IMAGE
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$RSA_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh root@$DEPLOY_HOST "cd ${DEVELOP_COMPOSE_DIR} && docker-compose pull ${DOCKER_COMPOSE_NAME} && docker-compose rm -s -f ${DOCKER_COMPOSE_NAME} && docker-compose up -d ${DOCKER_COMPOSE_NAME} && docker system prune -f"
  only:
    - master
    
deploy_release:
  image: $BUILD_IMAGE
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$RSA_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh root@$PROD_ENV_IP "cd ${RELEASE_COMPOSE_DIR} && docker-compose rm -s -f ${DOCKER_COMPOSE_NAME} && sed -i 's/${DOCKER_CONTAINER_NAME}:[A-Za-z0-9_.\-]*/${DOCKER_CONTAINER_NAME}:$CI_COMMIT_TAG/g' ${RELEASE_COMPOSE_DIR}/docker-compose.yml && docker-compose pull ${DOCKER_COMPOSE_NAME} && docker-compose up -d ${DOCKER_COMPOSE_NAME} && docker system prune -f"
  only:
    - tags

